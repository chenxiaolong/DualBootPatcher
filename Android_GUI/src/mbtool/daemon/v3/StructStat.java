// automatically generated by the FlatBuffers compiler, do not modify

package mbtool.daemon.v3;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class StructStat extends Table {
  public static StructStat getRootAsStructStat(ByteBuffer _bb) { return getRootAsStructStat(_bb, new StructStat()); }
  public static StructStat getRootAsStructStat(ByteBuffer _bb, StructStat obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public StructStat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long dev() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long ino() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long mode() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long nlink() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long uid() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long gid() { int o = __offset(14); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long rdev() { int o = __offset(16); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long size() { int o = __offset(18); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long blksize() { int o = __offset(20); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long blocks() { int o = __offset(22); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long atime() { int o = __offset(24); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long mtime() { int o = __offset(26); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long ctime() { int o = __offset(28); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createStructStat(FlatBufferBuilder builder,
      long dev,
      long ino,
      long mode,
      long nlink,
      long uid,
      long gid,
      long rdev,
      long size,
      long blksize,
      long blocks,
      long atime,
      long mtime,
      long ctime) {
    builder.startObject(13);
    StructStat.addCtime(builder, ctime);
    StructStat.addMtime(builder, mtime);
    StructStat.addAtime(builder, atime);
    StructStat.addBlocks(builder, blocks);
    StructStat.addBlksize(builder, blksize);
    StructStat.addSize(builder, size);
    StructStat.addRdev(builder, rdev);
    StructStat.addNlink(builder, nlink);
    StructStat.addIno(builder, ino);
    StructStat.addDev(builder, dev);
    StructStat.addGid(builder, gid);
    StructStat.addUid(builder, uid);
    StructStat.addMode(builder, mode);
    return StructStat.endStructStat(builder);
  }

  public static void startStructStat(FlatBufferBuilder builder) { builder.startObject(13); }
  public static void addDev(FlatBufferBuilder builder, long dev) { builder.addLong(0, dev, 0L); }
  public static void addIno(FlatBufferBuilder builder, long ino) { builder.addLong(1, ino, 0L); }
  public static void addMode(FlatBufferBuilder builder, long mode) { builder.addInt(2, (int)mode, (int)0L); }
  public static void addNlink(FlatBufferBuilder builder, long nlink) { builder.addLong(3, nlink, 0L); }
  public static void addUid(FlatBufferBuilder builder, long uid) { builder.addInt(4, (int)uid, (int)0L); }
  public static void addGid(FlatBufferBuilder builder, long gid) { builder.addInt(5, (int)gid, (int)0L); }
  public static void addRdev(FlatBufferBuilder builder, long rdev) { builder.addLong(6, rdev, 0L); }
  public static void addSize(FlatBufferBuilder builder, long size) { builder.addLong(7, size, 0L); }
  public static void addBlksize(FlatBufferBuilder builder, long blksize) { builder.addLong(8, blksize, 0L); }
  public static void addBlocks(FlatBufferBuilder builder, long blocks) { builder.addLong(9, blocks, 0L); }
  public static void addAtime(FlatBufferBuilder builder, long atime) { builder.addLong(10, atime, 0L); }
  public static void addMtime(FlatBufferBuilder builder, long mtime) { builder.addLong(11, mtime, 0L); }
  public static void addCtime(FlatBufferBuilder builder, long ctime) { builder.addLong(12, ctime, 0L); }
  public static int endStructStat(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

