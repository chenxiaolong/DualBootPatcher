# Copyright (C) 2016-2018  Andrew Gunnerson <andrewgunnerson@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

_commit=dc332205326340ec1bf7d553452c7699904054b4

pkgname=boringssl
pkgver=r5501.dc3322053
pkgrel=1
pkgdesc="BoringSSL is a fork of OpenSSL that is designed to meet Googleâ€™s needs."
arch=(armv7 aarch64 x86 x86_64)
url="https://boringssl.googlesource.com/boringssl/"
license=(custom:BSD)
source=("git+https://boringssl.googlesource.com/boringssl#commit=${_commit}")
sha512sums=('SKIP')

pkgver() {
    cd "${pkgname}"
    printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

build() {
    cd "${pkgname}"

    local abi api
    abi=$(android_get_abi_name)
    api=android-17

    mkdir -p "build_${abi}"
    cd "build_${abi}"

    local asflags='-fno-integrated-as'
    local cflags='-ffunction-sections -fdata-sections'
    local cxxflags='-ffunction-sections -fdata-sections'

    if [[ "${abi}" == 'arm64-v8a' ]]; then
        asflags+=' -Wa,-march=armv8-a+crypto'
    fi

    # Arch-independent configuration options
    args=(
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_ASM_FLAGS="${asflags}"
        -DCMAKE_C_FLAGS="${cflags}"
        -DCMAKE_CXX_FLAGS="${cxxflags}"
        -DCMAKE_TOOLCHAIN_FILE="${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake"
        -DANDROID_ABI="${abi}"
        -DANDROID_PLATFORM="${api}"
        -DOPENSSL_SMALL=TRUE
    )

    cmake .. "${args[@]}"
    make
}

package() {
    cd "${pkgname}"

    local abi
    abi=$(android_get_abi_name)

    install -dm755 "${pkgdir}"/{lib,include}/
    cp -a include/. "${pkgdir}"/include/
    install -m644 "build_${abi}"/crypto/libcrypto.a "${pkgdir}"/lib/
    install -m644 "build_${abi}"/ssl/libssl.a "${pkgdir}"/lib/
}
