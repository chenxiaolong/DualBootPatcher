# Copyright (C) 2014-2017  Andrew Gunnerson <andrewgunnerson@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

pkgname=valgrind
pkgver=3.13.0
pkgrel=1
pkgdesc="A tool to help find memory-management problems in programs"
arch=(armv7 aarch64 x86) # x86_64 not supported on Android
url="http://valgrind.org/"
license=(GPL)
source=("ftp://sourceware.org/pub/valgrind/valgrind-${pkgver}.tar.bz2"
        0001-Fix-build-with-NDK-unified-headers.patch)
md5sums=('817dd08f1e8a66336b9ff206400a5369'
         '85e39e9969b9414c9d4ef34c1ed6a553')

prepare() {
    cd "${pkgname}-${pkgver}"

    patch -p1 -i ../0001-Fix-build-with-NDK-unified-headers.patch
}

build() {
    cd "${pkgname}-${pkgver}"

    local api
    local args=()
    local cflags

    case "${CARCH}" in
    armv7)
        api=18
        args+=(--host=armv7-unknown-linux --target=armv7-unknown-linux)
        ;;
    aarch64)
        api=21
        args+=(--host=aarch64-unknown-linux --target=aarch64-unknown-linux)
        ;;
    x86)
        api=18
        args+=(--host=i686-android-linux --target=i686-android-linux)
        cflags+=' -fno-pic'
        ;;
    esac

    # __ANDROID_API__ is automatically set only for clang
    cflags+=" -D__ANDROID_API__=${api}"

    android_build_standalone_toolchain "${srcdir}/toolchain" "${api}"
    export PATH="${srcdir}/toolchain/bin:${PATH}"

    # Make valgrind's build scripts happy
    local triplet
    triplet=$("${srcdir}"/toolchain/bin/*-gcc -dumpmachine)
    export AR="${srcdir}/toolchain/bin/${triplet}-ar"
    export LD="${srcdir}/toolchain/bin/${triplet}-ld"
    export CC="${srcdir}/toolchain/bin/${triplet}-gcc"

    local abi
    abi=$(android_get_abi_name)

    mkdir -p "build_${abi}"
    cd "build_${abi}"

    CFLAGS="${cflags}" \
    ../configure \
        --prefix=/data/local/Inst \
        --with-tmpdir=/sdcard \
        "${args[@]}"

    CFLAGS="${cflags}" \
    make
}

package() {
    cd "${pkgname}-${pkgver}"

    local abi
    abi=$(android_get_abi_name)

    cd "build_${abi}"

    make install DESTDIR="${pkgdir}"
}
