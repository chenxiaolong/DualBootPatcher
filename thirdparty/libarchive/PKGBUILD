# Copyright (C) 2014-2017  Andrew Gunnerson <andrewgunnerson@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

_prebuilts='https://dbp.noobdev.io/repo/prebuilts'
_ver_libiconv=1.15-1
_ver_liblzma=5.2.3-2
_ver_lz4=131-1

pkgbase=libarchive
pkgname=(libarchive libarchive-lowapi)
pkgver=3.3.1
pkgrel=2
pkgdesc="Multi-format archive and compression library"
arch=(armv7 aarch64 x86 x86_64)
url="http://www.libarchive.org/"
license=(BSD)
source=("git+https://github.com/libarchive/libarchive.git#tag=v${pkgver}"
        'https://raw.githubusercontent.com/chenxiaolong/DualBootPatcher/383a34144eabd6e44839410e1d4387fb694912df/cmake/android.toolchain.cmake'
        0001-Force-UTF-8-as-the-default-charset-on-Android-since-.patch
        0002-NDK-unified-headers-uses-f_flags-for-struct-statfs.patch)
_source_template=("${_prebuilts}/libiconv-${_ver_libiconv}-@ARCH@.pkg.tar.xz"
                  "${_prebuilts}/libiconv-${_ver_libiconv}-@ARCH@.pkg.tar.xz.sig"
                  "${_prebuilts}/liblzma-${_ver_liblzma}-@ARCH@.pkg.tar.xz"
                  "${_prebuilts}/liblzma-${_ver_liblzma}-@ARCH@.pkg.tar.xz.sig"
                  "${_prebuilts}/lz4-${_ver_lz4}-@ARCH@.pkg.tar.xz"
                  "${_prebuilts}/lz4-${_ver_lz4}-@ARCH@.pkg.tar.xz.sig")
source_armv7=("${_source_template[@]/@ARCH@/armv7}")
source_aarch64=("${_source_template[@]/@ARCH@/aarch64}")
source_x86=("${_source_template[@]/@ARCH@/x86}")
source_x86_64=("${_source_template[@]/@ARCH@/x86_64}")
noextract=("libiconv-${_ver_libiconv}-${CARCH}.pkg.tar.xz"
           "liblzma-${_ver_liblzma}-${CARCH}.pkg.tar.xz"
           "lz4-${_ver_lz4}-${CARCH}.pkg.tar.xz")
validpgpkeys=('2233C479609BDCEC43BE9232F6A3B19090EFF32C')

prepare() {
    cd "${pkgbase}"
    git am ../0001-Force-UTF-8-as-the-default-charset-on-Android-since-.patch
    git am ../0002-NDK-unified-headers-uses-f_flags-for-struct-statfs.patch

    # Symlink Android header
    ln -sf ../contrib/android/include/android_lf.h libarchive/android_lf.h

    local abi
    abi=$(android_get_abi_name)

    mkdir -p "common_${abi}"
    cd "common_${abi}"

    mkdir -p libiconv liblzma lz4

    bsdtar -xf "${srcdir}/libiconv-${_ver_libiconv}-${CARCH}.pkg.tar.xz" -C libiconv
    bsdtar -xf "${srcdir}/liblzma-${_ver_liblzma}-${CARCH}.pkg.tar.xz" -C liblzma
    bsdtar -xf "${srcdir}/lz4-${_ver_lz4}-${CARCH}.pkg.tar.xz" -C lz4

    # Hack toolchain file to allow us to provide paths to headers and libraries
    sed '/[^A-Z_]CMAKE_FIND_ROOT_PATH[^A-Z_]/ s/)/ "${LIBLZMA_PREFIX_PATH}" "${LIBLZ4_PREFIX_PATH}" "${LIBICONV_PREFIX_PATH}")/g' \
        < "${srcdir}"/android.toolchain.cmake \
        > android.toolchain.cmake
}

build() {
    cd "${pkgbase}"

    # For android.toolchain.cmake
    export ANDROID_NDK=${ANDROID_NDK_HOME}

    local abi api lowapi toolchain toolchain_ver
    abi=$(android_get_abi_name)
    api=android-24
    toolchain=$(android_get_toolchain_name "${abi}")
    toolchain_ver=4.9

    local common_dir build_dir build_lowapi_dir
    common_dir="$(pwd)/common_${abi}"
    build_dir="$(pwd)/build_${abi}"
    build_lowapi_dir="$(pwd)/build_lowapi_${abi}"

    case "${abi}" in
    armeabi-v7a)
        lowapi=android-17
        ;;
    arm64-v8a)
        lowapi=android-21
        ;;
    x86)
        lowapi=android-17
        ;;
    x86_64)
        lowapi=android-21
        ;;
    esac

    args=(
        -DENABLE_TAR=OFF
        -DENABLE_CPIO=OFF
        -DENABLE_CAT=OFF
        -DENABLE_TEST=OFF
        -DENABLE_ICONV=OFF # At least until we need it
        -DLIBICONV_PREFIX_PATH="${common_dir}/libiconv"
        -DLIBLZMA_PREFIX_PATH="${common_dir}/liblzma"
        -DLIBLZ4_PREFIX_PATH="${common_dir}/lz4"
        -DCMAKE_TOOLCHAIN_FILE="${common_dir}/android.toolchain.cmake"
        -DANDROID_ABI="${abi}"
        -DANDROID_TOOLCHAIN_NAME="${toolchain}-${toolchain_ver}"
        -DLIBRARY_OUTPUT_PATH_ROOT=.
        # getgrnam_r's existence is a lie in the NDK
        -DHAVE_GETGRNAM_R=0
        -DCMAKE_C_FLAGS='-Wno-error=sign-compare'
    )

    mkdir -p "${build_dir}"
    mkdir -p "${build_lowapi_dir}"

    pushd "${build_dir}"
    cmake .. "${args[@]}" -DANDROID_NATIVE_API_LEVEL="${api}"
    make
    popd

    pushd "${build_lowapi_dir}"
    cmake .. "${args[@]}" -DANDROID_NATIVE_API_LEVEL="${lowapi}"
    make
    popd
}

package_libarchive() {
    cd "${pkgbase}"

    local abi
    abi=$(android_get_abi_name)

    install -dm755 "${pkgdir}"/{lib,include}/
    install -m644 libarchive/archive{,_entry}.h "${pkgdir}"/include/
    install -m644 contrib/android/include/android_lf.h "${pkgdir}"/include/
    install -m644 "build_${abi}/libarchive/libarchive.a" "${pkgdir}"/lib/
}

package_libarchive-lowapi() {
    cd "${pkgbase}"

    local abi
    abi=$(android_get_abi_name)

    install -dm755 "${pkgdir}"/{lib,include}/
    install -m644 libarchive/archive{,_entry}.h "${pkgdir}"/include/
    install -m644 contrib/android/include/android_lf.h "${pkgdir}"/include/
    install -m644 "build_lowapi_${abi}/libarchive/libarchive.a" "${pkgdir}"/lib/
}

sha512sums=('SKIP'
            '7ea556046441cc3907632447a9c6bfa25b94f1956e93fda5b9c39425a286f3a6376561fda45e086c169d05e1debcd760c7b21045d61db503b92d50fd06d758c5'
            '4365d30da7f280e1cd966f80e5ec7ef06d0253ec19722f4aa091f772956a9695a06f1bb49565c69380d2b79c705b7c684b5f8dd707448f22df04c67b90b8a6ae'
            '4d85c1070be075dc9b3a8162eed188051fa339c54c806efa9d061810bafed9889594bc421bbc131102c8f79a372d372e9a42841524433cd8e905406c50bebb3f')
sha512sums_armv7=('408d375cdedce1c3545a2b1e29c3d86780f9fe726eee5b23348540ee032230680affcd9c6685fc8227d578819e046e2544b35896a4d4248d1d59b5f46399c286'
                  'SKIP'
                  '2fd3c5578a6313abc7737d9862c9e2dde35296004439ab7fe41b42a54ee094295a04a83b0a565ac4801c01cbfb050189405163d0ab7a6b6bf48e128e6adb2bb1'
                  'SKIP'
                  'e3806e50e89527de9b4061a35ac6ef4be372ec4321a53a19a343ad5c5a29059582d0cdc48baffbd2dfd39332f116b1ea8d32d4662174ad0fdacebaac133edb58'
                  'SKIP')
sha512sums_aarch64=('ce1229780ecd372d014ef8a876eba0ec3942f494cd2532985961c827b92ae9853f99e8bd06566bac218619e384bfe7edcb9eaf4da8efbc159d6b5763cbd56255'
                    'SKIP'
                    'aacf52a9779c448182f0dcb011bbe0b658019d4b8b6a436070b8c57140787a8638a7696c9cbc5a04c0947b2d309d78a7aa98a85d28a67329a34c0fb01018608b'
                    'SKIP'
                    '262925a98d27ca0afd5dc579b7eca522ae6d15bed80294f34a6ed9b58ce51e321f755260a5f4723af26addf4856e52a8fb490db82b7a1e309dca50e6656bc5fb'
                    'SKIP')
sha512sums_x86=('6fff503771eab5e021eaf8bbc7952d0d4d1d358f9f7a24ebb2e8e72613d51be04eee0824a10b5271dc32f00f1432b0320758678b4462c7b056ebb543f9ca8556'
                'SKIP'
                'c685fe430601bb35609e9159427a98db4d8e9e5b1f414335216366b643b154c978a02815e5c2507cf73f2fcad32956e4dcc243c3fafbe6afd8e4a948e78d9a67'
                'SKIP'
                '4047ddb609ff1b228c8075c70347fab91119e3d5324cfe03eb616ebb6238f3ac9b77b6fdfad79eedb3f0faf81fb1ddd0a7dfd1e0d9012059fa2bed025ac8e5a1'
                'SKIP')
sha512sums_x86_64=('5da1a7282e9cae8bd9d73efcec61163c740a1d04e513f24445b03b3ef1bab97b4fa2fc5bed245519c0a62ab521484e07eca0ea09696dd7922184380cdb596ec3'
                   'SKIP'
                   'e48433585641d3caf86d17fd2ecac8fdeacd236705997303a06ba9a45ecdba94f6d9713386e1d5fa1413743cb459222fd37c3334d10e29e88ff90d1915e34092'
                   'SKIP'
                   '51129cf86be6c5f0b50262be15f3113fc08123df00e12d3474d5fb38c95ea5d0b6ddf5c83ca752d076ddc56920901174bbf2e9a29a3b8072eac3d60259f51334'
                   'SKIP')
