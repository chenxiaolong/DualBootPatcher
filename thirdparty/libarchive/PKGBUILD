# Copyright (C) 2014-2018  Andrew Gunnerson <andrewgunnerson@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

_prebuilts='https://downloads.sourceforge.net/project/dualbootpatcher/prebuilts'
_ver_liblzma=5.2.4-1
_ver_lz4=1.8.3-1

pkgbase=libarchive
pkgname=(libarchive libarchive-lowapi)
pkgver=3.3.3
pkgrel=1
pkgdesc="Multi-format archive and compression library"
arch=(armv7 aarch64 x86 x86_64)
url="http://www.libarchive.org/"
license=(BSD)
source=("git+https://github.com/libarchive/libarchive.git#tag=v${pkgver}"
        0001-Force-UTF-8-as-the-default-charset-on-Android-since-.patch
        0002-NDK-unified-headers-uses-f_flags-for-struct-statfs.patch)
_source_template=("${_prebuilts}/liblzma-${_ver_liblzma}-@ARCH@.pkg.tar.xz"
                  "${_prebuilts}/liblzma-${_ver_liblzma}-@ARCH@.pkg.tar.xz.sig"
                  "${_prebuilts}/lz4-${_ver_lz4}-@ARCH@.pkg.tar.xz"
                  "${_prebuilts}/lz4-${_ver_lz4}-@ARCH@.pkg.tar.xz.sig")
source_armv7=("${_source_template[@]/@ARCH@/armv7}")
source_aarch64=("${_source_template[@]/@ARCH@/aarch64}")
source_x86=("${_source_template[@]/@ARCH@/x86}")
source_x86_64=("${_source_template[@]/@ARCH@/x86_64}")
noextract=("liblzma-${_ver_liblzma}-${CARCH}.pkg.tar.xz"
           "lz4-${_ver_lz4}-${CARCH}.pkg.tar.xz")
validpgpkeys=('2233C479609BDCEC43BE9232F6A3B19090EFF32C')

prepare() {
    pushd "${pkgbase}"

    git am ../0001-Force-UTF-8-as-the-default-charset-on-Android-since-.patch
    git am ../0002-NDK-unified-headers-uses-f_flags-for-struct-statfs.patch

    # Symlink Android header
    ln -sf ../contrib/android/include/android_lf.h libarchive/android_lf.h

    popd

    mkdir -p common
    cd common

    mkdir -p liblzma lz4

    bsdtar -xf "${srcdir}/liblzma-${_ver_liblzma}-${CARCH}.pkg.tar.xz" -C liblzma
    bsdtar -xf "${srcdir}/lz4-${_ver_lz4}-${CARCH}.pkg.tar.xz" -C lz4
}

build() {
    cd "${pkgbase}"

    # For android.toolchain.cmake
    export ANDROID_NDK=${ANDROID_NDK_HOME}

    local abi api lowapi
    abi=$(android_get_abi_name)
    api=android-28

    case "${abi}" in
    armeabi-v7a)
        lowapi=android-17
        ;;
    arm64-v8a)
        lowapi=android-21
        ;;
    x86)
        lowapi=android-17
        ;;
    x86_64)
        lowapi=android-21
        ;;
    esac

    args=(
        -DENABLE_TAR=OFF
        -DENABLE_CPIO=OFF
        -DENABLE_CAT=OFF
        -DENABLE_TEST=OFF
        -DCMAKE_BUILD_TYPE=RelWithDebInfo
        -DCMAKE_FIND_ROOT_PATH="${srcdir}/common/liblzma;${srcdir}/common/lz4"
        -DCMAKE_TOOLCHAIN_FILE="${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake"
        -DANDROID_ABI="${abi}"
    )

    mkdir -p build
    mkdir -p build_lowapi

    pushd build
    cmake .. "${args[@]}" -DANDROID_PLATFORM="${api}"
    make VERBOSE=1
    popd

    pushd build_lowapi
    cmake .. "${args[@]}" -DANDROID_PLATFORM="${lowapi}"
    make
    popd
}

package_libarchive() {
    cd "${pkgbase}"

    install -dm755 "${pkgdir}"/{lib,include}/
    install -m644 libarchive/archive{,_entry}.h "${pkgdir}"/include/
    install -m644 contrib/android/include/android_lf.h "${pkgdir}"/include/
    install -m644 build/libarchive/libarchive.a "${pkgdir}"/lib/
}

package_libarchive-lowapi() {
    cd "${pkgbase}"

    install -dm755 "${pkgdir}"/{lib,include}/
    install -m644 libarchive/archive{,_entry}.h "${pkgdir}"/include/
    install -m644 contrib/android/include/android_lf.h "${pkgdir}"/include/
    install -m644 build_lowapi/libarchive/libarchive.a "${pkgdir}"/lib/
}

sha512sums=('SKIP'
            '4365d30da7f280e1cd966f80e5ec7ef06d0253ec19722f4aa091f772956a9695a06f1bb49565c69380d2b79c705b7c684b5f8dd707448f22df04c67b90b8a6ae'
            '4d85c1070be075dc9b3a8162eed188051fa339c54c806efa9d061810bafed9889594bc421bbc131102c8f79a372d372e9a42841524433cd8e905406c50bebb3f')
sha512sums_armv7=('486f0390e37e873fbafa965f1f6dc4363c0aa7f131f21191c888ef191decf68a077f199748b4208e56e0d7f0b0415aad500cb187577ae717ccc239abeb045db9'
                  'SKIP'
                  '2e2dad80466f75c7e8cb27f002d2bace39bfb3cdcb68e100656ab76d7091d6dcb18a783b81b89698c88e7b1e9016e5b1b42b8dc8e54f0363da1a6249b0c5887e'
                  'SKIP')
sha512sums_aarch64=('fc84f2fd6288c8b7f793a3d79d39e9dde1a29117da13f70d9955a7787d369346d1f6ac6615da4d7487fe9e9441a990b1bbecee78a120096e9c60e6e30d90c7f1'
                    'SKIP'
                    '86ef9257ffa3cb4b2db57e284df26aa73b99994a275452bca1cec4b00bcbbd875df1c21bc099be1047faddca0103c57fa6d517093549674d0fc0b9a236d721f2'
                    'SKIP')
sha512sums_x86=('e37174e6fcdfd26d23f79233a56d3b46455c60d58360b50e0bc4a268bcd43792bc1d964da6c8416129c8b6e0298bae1f4d63e2aad7320c6c6d2322916cbf4ac6'
                'SKIP'
                'ff04c0b432a8033176e0f8d2054031882723ee681075e2aea0377041b85a64d6795ff868dc899ee54e856d98ebb68cfd3231b38fa2599de6642de8d5314f931d'
                'SKIP')
sha512sums_x86_64=('6d4b93ed1ede309df14057165e95b309e34aa4a510d8227fbd8e76a380a2f262f5ebe34d142f3730b88fbb31b7259fc235ef1d7241862dd915e77bbb419c49bd'
                   'SKIP'
                   '17bd0e0d6eea82e46a0d0f2a33ca3d5bfebf59fa3d7d6b042b75f39eaccc9d1ae5cbbaa349846770a5a9462440ecda13fa981c073c9ac24817805f0b6ebdbe0f'
                   'SKIP')
