### LICENSE:
#
# Copyright (C) 2011 Ahmad Amarullah ( http://amarullz.com/ )
# Copyright (C) 2013-2015 Andrew Gunnerson <andrewgunnerson@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

ini_set("rom_name",    "Multi-Boot Utilities");
ini_set("rom_version", "@MBTOOL_VERSION@");
ini_set("rom_author",  "Andrew Gunnerson");
ini_set("rom_device",  "");
ini_set("rom_date",    "");

# English only for right now
loadlang("langs/en.lang");

theme("chenxiaolong");

#fontresload("0", "ttf/Roboto-Regular.ttf;ttf/DroidSansFallback.ttf;", "12");
#fontresload("1", "ttf/Roboto-Regular.ttf;ttf/DroidSansFallback.ttf;", "14");
fontresload("0", "ttf/Roboto-Regular.ttf", "12");
fontresload("1", "ttf/Roboto-Regular.ttf", "14");

setvar(
    "sysinfo",
    "<@center><b>Your device:</b></@>\n\n" +

    "Model\t\t\t: "        + "<b><#selectbg_g>" + sysprop("ro.product.model")        + "</#></b>\n"   +
    "Name\t\t\t: "         + "<b><#selectbg_g>" + sysprop("ro.product.name")         + "</#></b>\n"   +
    "Device Name\t\t: "    + "<b><#selectbg_g>" + sysprop("ro.product.device")       + "</#></b>\n"   +
    "Board Name\t\t: "     + "<b><#selectbg_g>" + sysprop("ro.product.board")        + "</#></b>\n"   +
    "Manufacturer\t\t: "   + "<b><#selectbg_g>" + sysprop("ro.product.manufacturer") + "</#></b>\n\n" +

    "/system Size\t\t: "   + "<b><#selectbg_g>" + getdisksize("@SYSTEM_MOUNT_POINT@", "m") + " MB" + "</#></b>\n"   +
      "\tFree\t\t\t: "     + "<b><#selectbg_g>" + getdiskfree("@SYSTEM_MOUNT_POINT@", "m") + " MB" + "</#></b>\n\n" +
    "/data Size\t\t: "     + "<b><#selectbg_g>" + getdisksize("@DATA_MOUNT_POINT@", "m")   + " MB" + "</#></b>\n"   +
      "\tFree\t\t\t: "     + "<b><#selectbg_g>" + getdiskfree("@DATA_MOUNT_POINT@", "m")   + " MB" + "</#></b>\n\n" +
    "/cache Size\t\t: "    + "<b><#selectbg_g>" + getdisksize("@CACHE_MOUNT_POINT@", "m")  + " MB" + "</#></b>\n"   +
      "\tFree\t\t\t: "     + "<b><#selectbg_g>" + getdiskfree("@CACHE_MOUNT_POINT@", "m")  + " MB" + "</#></b>\n\n" +
    "Internal SD Size\t: " + "<b><#selectbg_g>" + getdisksize("@DATA_MOUNT_POINT@", "m")   + " MB" + "</#></b>\n"   +
      "\tFree\t\t\t: "     + "<b><#selectbg_g>" + getdiskfree("@DATA_MOUNT_POINT@", "m")   + " MB" + "</#></b>\n\n" +
    "External SD Size\t: " + "<b><#selectbg_g>" + getdisksize("@EXTSD_MOUNT_POINT@", "m")  + " MB" + "</#></b>\n" +
      "\tFree\t\t\t: "     + "<b><#selectbg_g>" + getdiskfree("@EXTSD_MOUNT_POINT@", "m")  + " MB" + "</#></b>\n\n" +

    ""
);

viewbox(
    "<~welcome.title>",
    "<~welcome.text1> <b>" + ini_get("rom_name") + "</b> " +
        "<~common.for> <b>" + ini_get("rom_device") + "</b>.\n\n" +

    "<~welcome.text2>\n\n" +

        "  <~welcome.version>\t\t\t: " + "<b><#selectbg_g>" + ini_get("rom_version") + "</#></b>\n" +
        "  <~welcome.updated>\t\t\t: " + "<b><#selectbg_g>" + ini_get("rom_date")    + "</#></b>\n\n\n" +

    getvar("sysinfo"),

    "@welcome"
);

gotolabel("main_menu");

menubox(
    "<~operations.title>",
    "<~operations.desc>",
    "@personalize",
    "operations.prop",

    "Reboot",                  "Reboot your device",                      "@alert",
    "Exit",                    "Exit to recovery",                        "@install",
    @ROM_MENU_ITEMS@
    "Save last_kmsg log",      "Copies /proc/last_kmsg to internal SD",   "@default",
    "Save recovery log",       "Copies /tmp/recovery.log to internal SD", "@default"
);

# Reboot
if prop("operations.prop", "selected") == "1" then
    if confirm("Reboot",
               "Are you sure want to reboot your device?",
               "@alert") == "yes"
    then
        reboot("now");
    else
        goto("main_menu");
    endif;
endif;

# Exit
if prop("operations.prop", "selected") == "2" then
    if confirm("Exit",
               "Are you sure want to exit the Installer?",
               "@alert") == "yes"
    then
        exit("");
    else
        goto("main_menu");
    endif;
endif;

setvar("romid", "NONE");

@ROM_SELECTION_ITEMS@

if cmp(prop("operations.prop", "selected"), ">=", "@FIRST_INDEX@") &&
    cmp(prop("operations.prop", "selected"), "<=", "@LAST_INDEX@")
then
    menubox(
        "<~operations.title> (" + getvar("romname") + ")",
        "<~operations.desc> (" + getvar("romname") + ")",
        "@personalize",
        "romoperations.prop",

        "Switch to",    "", "@default",
        "Wipe ...",     "", "@default"
    );

    if prop("romoperations.prop", "selected") == "1" then
        write("/tmp/dbu/cmd.sh",
              "#!/sbin/sh\n" +
              "/tmp/dbu/utilities_cmd.sh switch --force " + getvar("romid") + "\n");
    else
        checkbox(
            "<~operations.title> (" + getvar("romname") + ")",
            "<~operations.desc> (" + getvar("romname") + ")",
            "@personalize",
            "romoperations.prop",

            "Wipe /system",             "", 0, # item.1.1
            "Wipe /cache",              "", 0, # item.1.2
            "Wipe /data",               "", 0, # item.1.3
            "Wipe dalvik-cache",        "", 0, # item.1.4
            "Wipe multiboot files",     "", 0  # item.1.5
        );

        write("/tmp/dbu/cmd.sh", "#!/sbin/sh\n");

        if prop("romoperations.prop", "item.0.1") == "1" then
            write("/tmp/dbu/cmd.sh",
                  read("/tmp/dbu/cmd.sh") +
                  "/tmp/dbu/utilities_cmd.sh wipe-system " + getvar("romid") + "\n");
        endif;
        if prop("romoperations.prop", "item.0.2") == "1" then
            write("/tmp/dbu/cmd.sh",
                  read("/tmp/dbu/cmd.sh") +
                  "/tmp/dbu/utilities_cmd.sh wipe-cache " + getvar("romid") + "\n");
        endif;
        if prop("romoperations.prop", "item.0.3") == "1" then
            write("/tmp/dbu/cmd.sh",
                  read("/tmp/dbu/cmd.sh") +
                  "/tmp/dbu/utilities_cmd.sh wipe-data " + getvar("romid") + "\n");
        endif;
        if prop("romoperations.prop", "item.0.4") == "1" then
            write("/tmp/dbu/cmd.sh",
                  read("/tmp/dbu/cmd.sh") +
                  "/tmp/dbu/utilities_cmd.sh wipe-dalvik-cache " + getvar("romid") + "\n");
        endif;
        if prop("romoperations.prop", "item.0.5") == "1" then
            write("/tmp/dbu/cmd.sh",
                  read("/tmp/dbu/cmd.sh") +
                  "/tmp/dbu/utilities_cmd.sh wipe-multiboot " + getvar("romid") + "\n");
        endif;
    endif;
else
    ini_set("text_next", "Continue");
    ini_set("icon_next", "@installbutton");

    # Save last_kmsg log
    if prop("operations.prop", "selected") == cal("@LAST_INDEX@", "+", "1") then
        write("/tmp/dbu/cmd.sh",
              "#!/sbin/sh\n" +
              "echo \"Copying /proc/last_kmsg to internal SD\"\n" +
              "cp /proc/last_kmsg /sdcard/\n");
    endif;

    # Save recovery log
    if prop("operations.prop", "selected") == cal("@LAST_INDEX@", "+", "2") then
        write("/tmp/dbu/cmd.sh",
              "#!/sbin/sh\n" +
              "echo \"Copying /tmp/recovery.log to internal SD\"\n" +
              "cp /tmp/recovery.log /sdcard/\n");
    endif;
endif;

ini_set("text_next", "Next");
ini_set("icon_next", "@next");

pleasewait("Executing Shell...");

setvar("exitcode", exec("/sbin/sh", "-ex", "/tmp/dbu/cmd.sh"));

textbox(
    "",
    "Operation complete",
    "@default",
    getvar("exec_buffer") + "\n\n" +
        "<b>EXIT CODE: " + getvar("exitcode") + "</b>"
);

ini_set("text_next", "Finish");
ini_set("icon_next", "@finish");

viewbox(
    "Operation Completed",
    "Press Finish to go back to the main menu.",
    "@finish"
);

goto("main_menu");
