// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_CRYPTODECRYPT_MBTOOL_DAEMON_V3_H_
#define FLATBUFFERS_GENERATED_CRYPTODECRYPT_MBTOOL_DAEMON_V3_H_

#include "flatbuffers/flatbuffers.h"

namespace mbtool {
namespace daemon {
namespace v3 {

struct CryptoDecryptRequest;

struct CryptoDecryptResponse;

struct CryptoDecryptRequest FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {

  };
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct CryptoDecryptRequestBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit CryptoDecryptRequestBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  CryptoDecryptRequestBuilder &operator=(const CryptoDecryptRequestBuilder &);
  flatbuffers::Offset<CryptoDecryptRequest> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<CryptoDecryptRequest>(end);
    return o;
  }
};

inline flatbuffers::Offset<CryptoDecryptRequest> CreateCryptoDecryptRequest(
    flatbuffers::FlatBufferBuilder &_fbb) {
  CryptoDecryptRequestBuilder builder_(_fbb);
  return builder_.Finish();
}

struct CryptoDecryptResponse FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {

  };
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct CryptoDecryptResponseBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit CryptoDecryptResponseBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  CryptoDecryptResponseBuilder &operator=(const CryptoDecryptResponseBuilder &);
  flatbuffers::Offset<CryptoDecryptResponse> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<CryptoDecryptResponse>(end);
    return o;
  }
};

inline flatbuffers::Offset<CryptoDecryptResponse> CreateCryptoDecryptResponse(
    flatbuffers::FlatBufferBuilder &_fbb) {
  CryptoDecryptResponseBuilder builder_(_fbb);
  return builder_.Finish();
}

}  // namespace v3
}  // namespace daemon
}  // namespace mbtool

#endif  // FLATBUFFERS_GENERATED_CRYPTODECRYPT_MBTOOL_DAEMON_V3_H_
